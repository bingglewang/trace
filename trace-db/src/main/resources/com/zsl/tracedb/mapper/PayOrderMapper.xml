<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zsl.tracedb.mapper.PayOrderMapper">
  <resultMap id="BaseResultMap" type="com.zsl.tracedb.model.PayOrder">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="pay_order_num" jdbcType="VARCHAR" property="payOrderNum" />
    <result column="order_type" jdbcType="INTEGER" property="orderType" />
    <result column="order_type_id" jdbcType="INTEGER" property="orderTypeId" />
    <result column="pay_type" jdbcType="INTEGER" property="payType" />
    <result column="pay_certify" jdbcType="VARCHAR" property="payCertify" />
    <result column="pay_sum" jdbcType="REAL" property="paySum" />
    <result column="pay_status" jdbcType="INTEGER" property="payStatus" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, pay_order_num, order_type, order_type_id, pay_type, pay_certify, pay_sum, pay_status, 
    create_time
  </sql>
  <select id="selectByExample" parameterType="com.zsl.tracedb.model.PayOrderExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from pay_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from pay_order
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from pay_order
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.zsl.tracedb.model.PayOrderExample">
    delete from pay_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.zsl.tracedb.model.PayOrder">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into pay_order (pay_order_num, order_type, order_type_id, 
      pay_type, pay_certify, pay_sum, 
      pay_status, create_time)
    values (#{payOrderNum,jdbcType=VARCHAR}, #{orderType,jdbcType=INTEGER}, #{orderTypeId,jdbcType=INTEGER}, 
      #{payType,jdbcType=INTEGER}, #{payCertify,jdbcType=VARCHAR}, #{paySum,jdbcType=REAL}, 
      #{payStatus,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.zsl.tracedb.model.PayOrder">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into pay_order
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="payOrderNum != null">
        pay_order_num,
      </if>
      <if test="orderType != null">
        order_type,
      </if>
      <if test="orderTypeId != null">
        order_type_id,
      </if>
      <if test="payType != null">
        pay_type,
      </if>
      <if test="payCertify != null">
        pay_certify,
      </if>
      <if test="paySum != null">
        pay_sum,
      </if>
      <if test="payStatus != null">
        pay_status,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="payOrderNum != null">
        #{payOrderNum,jdbcType=VARCHAR},
      </if>
      <if test="orderType != null">
        #{orderType,jdbcType=INTEGER},
      </if>
      <if test="orderTypeId != null">
        #{orderTypeId,jdbcType=INTEGER},
      </if>
      <if test="payType != null">
        #{payType,jdbcType=INTEGER},
      </if>
      <if test="payCertify != null">
        #{payCertify,jdbcType=VARCHAR},
      </if>
      <if test="paySum != null">
        #{paySum,jdbcType=REAL},
      </if>
      <if test="payStatus != null">
        #{payStatus,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zsl.tracedb.model.PayOrderExample" resultType="java.lang.Integer">
    select count(*) from pay_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update pay_order
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.payOrderNum != null">
        pay_order_num = #{record.payOrderNum,jdbcType=VARCHAR},
      </if>
      <if test="record.orderType != null">
        order_type = #{record.orderType,jdbcType=INTEGER},
      </if>
      <if test="record.orderTypeId != null">
        order_type_id = #{record.orderTypeId,jdbcType=INTEGER},
      </if>
      <if test="record.payType != null">
        pay_type = #{record.payType,jdbcType=INTEGER},
      </if>
      <if test="record.payCertify != null">
        pay_certify = #{record.payCertify,jdbcType=VARCHAR},
      </if>
      <if test="record.paySum != null">
        pay_sum = #{record.paySum,jdbcType=REAL},
      </if>
      <if test="record.payStatus != null">
        pay_status = #{record.payStatus,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update pay_order
    set id = #{record.id,jdbcType=INTEGER},
      pay_order_num = #{record.payOrderNum,jdbcType=VARCHAR},
      order_type = #{record.orderType,jdbcType=INTEGER},
      order_type_id = #{record.orderTypeId,jdbcType=INTEGER},
      pay_type = #{record.payType,jdbcType=INTEGER},
      pay_certify = #{record.payCertify,jdbcType=VARCHAR},
      pay_sum = #{record.paySum,jdbcType=REAL},
      pay_status = #{record.payStatus,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zsl.tracedb.model.PayOrder">
    update pay_order
    <set>
      <if test="payOrderNum != null">
        pay_order_num = #{payOrderNum,jdbcType=VARCHAR},
      </if>
      <if test="orderType != null">
        order_type = #{orderType,jdbcType=INTEGER},
      </if>
      <if test="orderTypeId != null">
        order_type_id = #{orderTypeId,jdbcType=INTEGER},
      </if>
      <if test="payType != null">
        pay_type = #{payType,jdbcType=INTEGER},
      </if>
      <if test="payCertify != null">
        pay_certify = #{payCertify,jdbcType=VARCHAR},
      </if>
      <if test="paySum != null">
        pay_sum = #{paySum,jdbcType=REAL},
      </if>
      <if test="payStatus != null">
        pay_status = #{payStatus,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zsl.tracedb.model.PayOrder">
    update pay_order
    set pay_order_num = #{payOrderNum,jdbcType=VARCHAR},
      order_type = #{orderType,jdbcType=INTEGER},
      order_type_id = #{orderTypeId,jdbcType=INTEGER},
      pay_type = #{payType,jdbcType=INTEGER},
      pay_certify = #{payCertify,jdbcType=VARCHAR},
      pay_sum = #{paySum,jdbcType=REAL},
      pay_status = #{payStatus,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>