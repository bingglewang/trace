<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zsl.tracedb.mapper.ZslConflictCodeMapper">
  <resultMap id="BaseResultMap" type="com.zsl.tracedb.model.ZslConflictCode">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="trace_sid" jdbcType="BIGINT" property="traceSid" />
    <result column="trace_code_number" jdbcType="VARCHAR" property="traceCodeNumber" />
    <result column="product_batch_code" jdbcType="VARCHAR" property="productBatchCode" />
    <result column="trace_good_name" jdbcType="VARCHAR" property="traceGoodName" />
    <result column="trace_node_name" jdbcType="VARCHAR" property="traceNodeName" />
    <result column="trace_address" jdbcType="VARCHAR" property="traceAddress" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, trace_sid, trace_code_number, product_batch_code, trace_good_name, trace_node_name, 
    trace_address
  </sql>
  <select id="selectByExample" parameterType="com.zsl.tracedb.model.ZslConflictCodeExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from zsl_conflict_code
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from zsl_conflict_code
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from zsl_conflict_code
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.zsl.tracedb.model.ZslConflictCodeExample">
    delete from zsl_conflict_code
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.zsl.tracedb.model.ZslConflictCode">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into zsl_conflict_code (trace_sid, trace_code_number, product_batch_code, 
      trace_good_name, trace_node_name, trace_address
      )
    values (#{traceSid,jdbcType=BIGINT}, #{traceCodeNumber,jdbcType=VARCHAR}, #{productBatchCode,jdbcType=VARCHAR}, 
      #{traceGoodName,jdbcType=VARCHAR}, #{traceNodeName,jdbcType=VARCHAR}, #{traceAddress,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.zsl.tracedb.model.ZslConflictCode">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into zsl_conflict_code
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="traceSid != null">
        trace_sid,
      </if>
      <if test="traceCodeNumber != null">
        trace_code_number,
      </if>
      <if test="productBatchCode != null">
        product_batch_code,
      </if>
      <if test="traceGoodName != null">
        trace_good_name,
      </if>
      <if test="traceNodeName != null">
        trace_node_name,
      </if>
      <if test="traceAddress != null">
        trace_address,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="traceSid != null">
        #{traceSid,jdbcType=BIGINT},
      </if>
      <if test="traceCodeNumber != null">
        #{traceCodeNumber,jdbcType=VARCHAR},
      </if>
      <if test="productBatchCode != null">
        #{productBatchCode,jdbcType=VARCHAR},
      </if>
      <if test="traceGoodName != null">
        #{traceGoodName,jdbcType=VARCHAR},
      </if>
      <if test="traceNodeName != null">
        #{traceNodeName,jdbcType=VARCHAR},
      </if>
      <if test="traceAddress != null">
        #{traceAddress,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zsl.tracedb.model.ZslConflictCodeExample" resultType="java.lang.Integer">
    select count(*) from zsl_conflict_code
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update zsl_conflict_code
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.traceSid != null">
        trace_sid = #{record.traceSid,jdbcType=BIGINT},
      </if>
      <if test="record.traceCodeNumber != null">
        trace_code_number = #{record.traceCodeNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.productBatchCode != null">
        product_batch_code = #{record.productBatchCode,jdbcType=VARCHAR},
      </if>
      <if test="record.traceGoodName != null">
        trace_good_name = #{record.traceGoodName,jdbcType=VARCHAR},
      </if>
      <if test="record.traceNodeName != null">
        trace_node_name = #{record.traceNodeName,jdbcType=VARCHAR},
      </if>
      <if test="record.traceAddress != null">
        trace_address = #{record.traceAddress,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update zsl_conflict_code
    set id = #{record.id,jdbcType=INTEGER},
      trace_sid = #{record.traceSid,jdbcType=BIGINT},
      trace_code_number = #{record.traceCodeNumber,jdbcType=VARCHAR},
      product_batch_code = #{record.productBatchCode,jdbcType=VARCHAR},
      trace_good_name = #{record.traceGoodName,jdbcType=VARCHAR},
      trace_node_name = #{record.traceNodeName,jdbcType=VARCHAR},
      trace_address = #{record.traceAddress,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zsl.tracedb.model.ZslConflictCode">
    update zsl_conflict_code
    <set>
      <if test="traceSid != null">
        trace_sid = #{traceSid,jdbcType=BIGINT},
      </if>
      <if test="traceCodeNumber != null">
        trace_code_number = #{traceCodeNumber,jdbcType=VARCHAR},
      </if>
      <if test="productBatchCode != null">
        product_batch_code = #{productBatchCode,jdbcType=VARCHAR},
      </if>
      <if test="traceGoodName != null">
        trace_good_name = #{traceGoodName,jdbcType=VARCHAR},
      </if>
      <if test="traceNodeName != null">
        trace_node_name = #{traceNodeName,jdbcType=VARCHAR},
      </if>
      <if test="traceAddress != null">
        trace_address = #{traceAddress,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zsl.tracedb.model.ZslConflictCode">
    update zsl_conflict_code
    set trace_sid = #{traceSid,jdbcType=BIGINT},
      trace_code_number = #{traceCodeNumber,jdbcType=VARCHAR},
      product_batch_code = #{productBatchCode,jdbcType=VARCHAR},
      trace_good_name = #{traceGoodName,jdbcType=VARCHAR},
      trace_node_name = #{traceNodeName,jdbcType=VARCHAR},
      trace_address = #{traceAddress,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>