<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zsl.traceapi.dao.ZslTraceSubcodeDao">

	<!-- 条件查询列表 -->
    <resultMap id="listByConditionResult" type="com.zsl.tracedb.model.ZslTraceSubcode">
        <id column="id" jdbcType="BIGINT" property="id" />
	    <result column="trace_sid" jdbcType="BIGINT" property="traceSid" />
	    <result column="trace_index" jdbcType="BIGINT" property="traceIndex" />
	    <result column="trace_code_number" jdbcType="VARCHAR" property="traceCodeNumber" />
	    <result column="trace_sub_code_number" jdbcType="VARCHAR" property="traceSubCodeNumber" />
	    <result column="trace_good_id" jdbcType="INTEGER" property="traceGoodId" />
	    <result column="trace_stall_id" jdbcType="INTEGER" property="traceStallId" />
	    <result column="parent_id" jdbcType="BIGINT" property="parentId" />
	    <result column="is_leaf" jdbcType="VARCHAR" property="isLeaf" />
	    <result column="node_level" jdbcType="INTEGER" property="nodeLevel" />
	    <result column="scan_count" jdbcType="BIGINT" property="scanCount" />
	    <result column="is_saled" jdbcType="INTEGER" property="isSaled" />
	    <result column="sale_time" jdbcType="TIMESTAMP" property="saleTime" />
    </resultMap>
	<select id="listByCondition"  resultMap="listByConditionResult"
			parameterType="com.zsl.tracedb.model.ZslTraceSubcode">
        SELECT
		   	*
		FROM
		   zsl_trace_subcode 
		WHERE 1=1
   			<if test="traceSid!=null">
   				AND trace_sid = #{traceSid}
   			</if>
   			<if test="traceIndex!=null">
   				AND trace_index = #{traceIndex}
   			</if>
   			<if test="traceCodeNumber!=null and traceCodeNumber!=''">
   				AND trace_code_number LIKE CONCAT('%', #{traceCodeNumber}, '%')
   			</if>
   			<if test="traceSubCodeNumber!=null and traceSubCodeNumber!=''">
   				AND trace_sub_code_number LIKE CONCAT('%', #{traceSubCodeNumber}, '%')
   			</if>
			<if test="traceGoodId!=null">
   				AND trace_good_id = #{traceGoodId}
   			</if>
   			<if test="traceStallId!=null">
   				AND trace_stall_id = #{traceStallId}
   			</if>
   			<if test="parentId!=null">
   				AND parent_id = #{parentId}
   			</if>
	      	<if test="isLeaf!=null and isLeaf!=''">
   				AND is_leaf LIKE CONCAT('%', #{isLeaf}, '%')
   			</if>
   			<if test="nodeLevel!=null">
   				AND node_level = #{nodeLevel}
   			</if>
   			<if test="scanCount!=null">
   				AND scan_count = #{scanCount}
   			</if>
   			<if test="isSaled!=null">
   				AND is_saled = #{isSaled}
   			</if>
   			<if test="saleTime!=null">
   				AND sale_time = #{saleTime}
   			</if>
   			ORDER BY sale_time DESC
    </select>

    <resultMap id="BaseResultMap" type="com.zsl.tracedb.model.ZslTraceSubcode">
        <id column="id" jdbcType="BIGINT" property="id" />
        <result column="trace_sid" jdbcType="BIGINT" property="traceSid" />
        <result column="trace_index" jdbcType="BIGINT" property="traceIndex" />
        <result column="trace_code_number" jdbcType="VARCHAR" property="traceCodeNumber" />
        <result column="trace_sub_code_number" jdbcType="VARCHAR" property="traceSubCodeNumber" />
        <result column="trace_good_id" jdbcType="INTEGER" property="traceGoodId" />
        <result column="trace_stall_id" jdbcType="INTEGER" property="traceStallId" />
        <result column="parent_id" jdbcType="BIGINT" property="parentId" />
        <result column="is_leaf" jdbcType="CHAR" property="isLeaf" />
        <result column="node_level" jdbcType="INTEGER" property="nodeLevel" />
        <result column="scan_count" jdbcType="BIGINT" property="scanCount" />
        <result column="is_saled" jdbcType="INTEGER" property="isSaled" />
        <result column="sale_time" jdbcType="TIMESTAMP" property="saleTime" />
    </resultMap>

    <resultMap id="PointResultMap" type="com.zsl.tracedb.model.ZslTracePoint">
        <id column="trace_point_id" jdbcType="INTEGER" property="tracePointId" />
        <result column="trace_goods_id" jdbcType="INTEGER" property="traceGoodsId" />
        <result column="trace_point_name" jdbcType="VARCHAR" property="tracePointName" />
        <result column="trace_point_to_number" jdbcType="INTEGER" property="tracePointToNumber" />
        <result column="trace_point_from_number" jdbcType="INTEGER" property="tracePointFromNumber" />
        <result column="trace_parent_id" jdbcType="INTEGER" property="traceParentId" />
        <result column="trace_stall_id" jdbcType="INTEGER" property="traceStallId" />
        <result column="trace_code_number" jdbcType="VARCHAR" property="traceCodeNumber" />
        <result column="trace_point_time" jdbcType="TIMESTAMP" property="tracePointTime" />
        <result column="trace_point_account_id" jdbcType="INTEGER" property="tracePointAccountId" />
    </resultMap>

    <resultMap id="BaseResultMapSub" type="com.zsl.traceapi.dto.ExcelTraceCode">
        <result column="id" jdbcType="BIGINT" property="code" />
    </resultMap>

    <insert id="insertCodeBatch">
        insert into zsl_trace_subcode (trace_sid,trace_index, trace_code_number,trace_sub_code_number) values
        <foreach collection="list" item="item" separator="," index="index">
            (#{item.traceSid,jdbcType=BIGINT},
            #{item.traceIndex,jdbcType=BIGINT},
            #{item.traceCodeNumber,jdbcType=VARCHAR},
            #{item.traceSubcodeNumber,jdbcType=VARCHAR})
        </foreach>
    </insert>

    <insert id="insertCodePreSidBatch">
        insert into zsl_trace_subcode (trace_sid,trace_sub_code_number) values
        <foreach collection="list" item="item" separator="," index="index">
            (#{item.traceSid,jdbcType=BIGINT},
            #{item.traceSubcodeNumber,jdbcType=VARCHAR})
        </foreach>
    </insert>

    <insert id="insertCodeBatch1">
        insert into zsl_trace_subcode (trace_sub_code_number,is_leaf) values
        <foreach collection="list" item="item" separator="," index="index">
            (#{item.subCodeNumber,jdbcType=VARCHAR},
            #{item.isLeaf,jdbcType=VARCHAR})
        </foreach>
    </insert>

    <update id="updateGoodsAndStall" parameterType="java.util.List">
        <foreach collection="list" item="item" index="index" open="" close="" separator=";">
            UPDATE zsl_trace_subcode
            <set>
                trace_good_id=#{item.goodsId},
                trace_stall_id=#{item.stallId}
            </set>
            <where>
                id = #{item.id}
            </where>
        </foreach>
    </update>


    <update id="updateGoodsAndStallSid" parameterType="java.util.List">
        <foreach collection="list" item="item" index="index" open="" close="" separator=";">
            UPDATE zsl_trace_subcode
            <set>
                trace_index=#{item.traceIndex},
                trace_code_number=#{item.traceCodeNumber},
                trace_good_id=#{item.goodsId},
                trace_stall_id=#{item.stallId}
            </set>
            <where>
                id = #{item.id}
            </where>
        </foreach>
    </update>

    <update id="updateOutCodeBatch" parameterType="java.util.List">
        <foreach collection="list" item="item" index="index" open="" close="" separator=";">
            UPDATE zsl_trace_subcode
            <set>
                parent_id = #{item.parentId}
            </set>
            <where>
                id = #{item.id}
            </where>
        </foreach>
    </update>

    <update id="updateOutCodeById" parameterType="java.util.List">
        <foreach collection="list" item="item" index="index" open="" close="" separator=";">
            UPDATE zsl_trace_subcode
            <set>
                is_leaf = 'N',
                node_level = #{item.nodeLevel}
            </set>
            <where>
                id = #{item.id}
            </where>
        </foreach>
    </update>

    <select id="selectByCodeNumber" resultMap="BaseResultMap">
        SELECT *  FROM `zsl_trace_subcode` WHERE trace_code_number = #{traceCodeNumber} LIMIT 1;
    </select>

    <select id="selectByParenId" resultMap="BaseResultMap">
        SELECT * FROM `zsl_trace_subcode` where parent_id = #{parentId};
    </select>

    <update id="deleteCodeRelation">
        UPDATE zsl_trace_subcode
        <set>
            parent_id  = -1
        </set>
        <where>
            id = #{id}
        </where>
    </update>

    <select id="selectBySubCode" resultMap="BaseResultMap">
        SELECT *  FROM `zsl_trace_subcode` WHERE trace_sub_code_number = #{traceSubCode} LIMIT 1;
    </select>

    <select id="selectById" resultMap="BaseResultMap">
        SELECT *  FROM `zsl_trace_subcode` WHERE trace_sid = #{id} LIMIT 1;
    </select>


    <select id="selectBetweenAllRecord" resultMap="BaseResultMap">
         SELECT *  FROM `zsl_trace_subcode` WHERE trace_sid between #{start} and  #{end} ORDER BY trace_sid asc
    </select>

    <select id="selectBtweenCount" resultType="java.lang.Long">
         SELECT count(id)  FROM `zsl_trace_subcode` WHERE trace_sid between #{start} and #{end}
    </select>

    <select id="onlyMyselfCode" resultType="java.lang.Long">
       SELECT
	count(sub.id)
FROM
	`zsl_trace_subcode` sub ,
zsl_trace_point p

WHERE
	(
		trace_sid BETWEEN #{start}
		AND #{end}
	)
AND (
	SELECT
		a.trace_business_id
	FROM
		zsl_trace a
	WHERE
		a.trace_code_number = sub.trace_code_number
) = #{merchantId}
and
(sub.trace_index BETWEEN p.trace_point_from_number and p.trace_point_to_number)
        and p.trace_code_number = sub.trace_code_number
        and p.trace_goods_id = sub.trace_good_id
AND sub.is_leaf = 'Y';
    </select>

    <select id="exportExcel" resultType="java.lang.Long">
        SELECT trace_sid
        FROM `zsl_trace_subcode`
        where id BETWEEN
        (SELECT id from zsl_trace_subcode where trace_index = #{fromIndex} and trace_code_number = #{traceCodeNumber})
        and
        (SELECT id from zsl_trace_subcode where  trace_index = #{toIndex} and trace_code_number = #{traceCodeNumber})
    </select>

    <select id="selectByRange" resultType="java.lang.Long">
        SELECT id
        FROM `zsl_trace_subcode`
        where id BETWEEN
        (SELECT id from zsl_trace_subcode where trace_index = #{fromIndex} and trace_code_number = #{traceCodeNumber})
        and
        (SELECT id from zsl_trace_subcode where  trace_index = #{toIndex} and trace_code_number = #{traceCodeNumber})
    </select>

    <!--根据下标查询字码-->
    <select id="selectSubCodeByRange" resultType="java.lang.String">
        SELECT trace_sub_code_number
        FROM `zsl_trace_subcode`
        where (trace_sid BETWEEN
         #{fromIndex}
        and
         #{toIndex}
    )
</select>

   <!-- 根据下标查询sid-->
    <select id="selectSidByIndex" resultType="java.lang.Long">
         SELECT trace_sid from zsl_trace_subcode where trace_index = #{traceIndex} and trace_code_number =  #{traceCodeNumber} LIMIT 1
    </select>


    <select id="selectBySidRange" resultType="java.lang.Long">
        SELECT id
        FROM `zsl_trace_subcode`
        where trace_sid BETWEEN
          #{startSidIndex}
        and
          #{endSidIndex}
        ORDER BY id ASC
    </select>

    <delete id="deleteByCodeNumber">
        delete from zsl_trace_subcode where trace_code_number=#{traceCodeNumber}
    </delete>

    <select id="goodsScanCount" resultType="java.lang.Long">
       SELECT
            count(id)
        FROM
            zsl_trace_subcode z
        WHERE
            z.trace_code_number =  #{traceCodeNumber}
        AND z.scan_count = 0
        AND z.trace_good_id IS NOT NULL
        AND z.is_leaf = 'Y'
        AND (
            z.trace_sid BETWEEN (
                SELECT
                    r.trace_from_number
                FROM
                    zsl_trace_record r
                WHERE
                    r.trace_code_number =  #{traceCodeNumber}
                AND (
                    #{traceIndex} BETWEEN r.trace_from_number
                    AND r.trace_to_number
                )
                AND r.trace_good_id = #{goodsId}
            )
            AND (
                SELECT
                    r1.trace_to_number
                FROM
                    zsl_trace_record r1
                WHERE
                    r1.trace_code_number =  #{traceCodeNumber}
                AND (
                    #{traceIndex} BETWEEN r1.trace_from_number
                    AND r1.trace_to_number
                )
                 AND r1.trace_good_id = #{goodsId}
            )
        )
    </select>

    <select id="goodsTotalCount" resultType="java.lang.Long">
          SELECT
            count(id)
        FROM
            zsl_trace_subcode z
        WHERE
            z.trace_code_number =  #{traceCodeNumber}
        AND z.trace_good_id IS NOT NULL
        AND z.is_leaf = 'Y'
        AND (
            z.trace_sid BETWEEN (
                SELECT
                    r.trace_from_number
                FROM
                    zsl_trace_record r
                WHERE
                    r.trace_code_number =  #{traceCodeNumber}
                AND (
                    #{traceIndex} BETWEEN r.trace_from_number
                    AND r.trace_to_number
                )
                 AND r.trace_good_id = #{goodsId}
            )
            AND (
                SELECT
                    r1.trace_to_number
                FROM
                    zsl_trace_record r1
                WHERE
                    r1.trace_code_number =  #{traceCodeNumber}
                AND (
                    #{traceIndex} BETWEEN r1.trace_from_number
                    AND r1.trace_to_number
                )
                 AND r1.trace_good_id = #{goodsId}
            )
        )
    </select>

    <select id="selectTracePointNodes" resultMap="PointResultMap">
       select *
        from zsl_trace_point
         where (#{traceIndex} BETWEEN trace_point_from_number and trace_point_to_number)
        and trace_code_number = #{traceCodeNumber}
        and trace_goods_id = #{traceGoodsId}
        and trace_stall_id  = -1
        ORDER BY trace_point_time ASC
    </select>


    <select id="selectNewestPointNode" resultMap="PointResultMap">
        select *
        from zsl_trace_point
        where (#{traceIndex} BETWEEN trace_point_from_number and trace_point_to_number)
        and trace_code_number = #{traceCodeNumber}
        and trace_goods_id = #{traceGoodsId}
        ORDER BY trace_point_time desc limit 1
    </select>

    <select id="searchByIndexOrCode" resultMap="BaseResultMap">
        SELECT *
        FROM zsl_trace_subcode
        where
        trace_code_number = #{traceCodeNumber}
        and
        (trace_sid = #{traceIndexOrCode}+0
        or trace_sub_code_number = #{traceIndexOrCode}
        or id = (SELECT id from zsl_trace_subcode where trace_index = #{traceIndexOrCode}+0 and trace_code_number = #{traceCodeNumber})
        )
    </select>

    <select id="getSuCodeByPage" resultMap="BaseResultMap">
       SELECT *
       from zsl_trace_subcode
       where
       (
             id BETWEEN
            (SELECT id FROM `zsl_trace_subcode` where trace_index = #{fromNumber} and trace_code_number = #{traceCodeNumber}  and trace_good_id is not null)
            and
            (SELECT id FROM `zsl_trace_subcode` where trace_index = #{toNumber} and trace_code_number = #{traceCodeNumber}  and trace_good_id is not null)
        )
        and trace_code_number = #{traceCodeNumber}
        and parent_id = -1
        and trace_good_id is not null
        ORDER BY node_level desc
    </select>

    <select id="getSuCodeByPage1" resultMap="BaseResultMap">
          SELECT
                *
            FROM
                zsl_trace_subcode
            WHERE
				trace_code_number = #{traceCodeNumber}
			AND parent_id = - 1
			AND trace_good_id IS NOT NULL
			ORDER BY
				node_level DESC
    </select>


    <select id="getTotalCount" resultType="java.lang.Long">
        SELECT count(parent_id) from zsl_trace_subcode where (trace_sid BETWEEN
         #{fromNumber}
        and
         #{toNumber}
        and trace_code_number = #{traceCodeNumber}
        and parent_id = -1
        and trace_good_id is not null
    </select>


    <select id="selectMaxToNumberByRecord" resultType="java.lang.Long">
        select max(trace_sid)
        from zsl_trace_subcode
        where trace_sid
        in (SELECT trace_to_number FROM `zsl_trace_record` where trace_code_number = #{traceCodeNumber} )
        and trace_code_number = #{traceCodeNumber}
    </select>

    <select id="selectMinFromNumberByRecord" resultType="java.lang.Long">
        select min(trace_sid)
        from zsl_trace_subcode
        where trace_sid
        in (SELECT trace_from_number FROM `zsl_trace_record` where trace_code_number = #{traceCodeNumber} )
        and trace_code_number = #{traceCodeNumber}
    </select>


    <!--喷码-->
    <select id="getSidsByTraceCodeNumber" resultType="com.zsl.traceapi.vo.SpurtCodeVo">
         SELECT
              trace_code_number traceCodeNumber,
              trace_sid sid
        FROM `zsl_trace_subcode`
        where trace_code_number = #{traceCodeNumber}
        ORDER by trace_sid asc;
    </select>

    <select id="getSubCodeBySidAndCode" resultType="com.zsl.traceapi.vo.SpurtCodeVo">
          SELECT
              trace_code_number traceCodeNumber,
              trace_sid sid
        FROM `zsl_trace_subcode`
        where trace_code_number = #{traceCodeNumber}
        and trace_sid = #{traceSid}
    </select>
    
    
    <!-- 追溯sid查询记录 -->
    <select id="recordBySid" parameterType="java.lang.Long" resultMap="BaseResultMap">
    	SELECT * FROM zsl_trace_subcode WHERE trace_sid=#{traceSid}
    </select>

</mapper>